name: Claude Code Generator

on:
  workflow_dispatch:
    inputs:
      project_type:
        description: 'Project type'
        required: true
        type: string
      tech_stack:
        description: 'Technology stack'
        required: true
        type: string
      requirements:
        description: 'Project requirements'
        required: true
        type: string
      slack_channel:
        description: 'Slack channel'
        required: true
        type: string
      slack_user:
        description: 'Slack user'
        required: true
        type: string
permissions:
  contents: write      # リポジトリの内容を変更する権限
  pull-requests: write # PRを作成する権限（必要に応じて）
jobs:
  generate-project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install requests

      - name: Generate project with Claude
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          cat > generate_project.py << 'EOF'
          import os
          import json
          import requests
          
          project_type = "${{ github.event.inputs.project_type }}"
          tech_stack = "${{ github.event.inputs.tech_stack }}"
          requirements = "${{ github.event.inputs.requirements }}"
          
          headers = {
              "x-api-key": os.environ["ANTHROPIC_API_KEY"],
              "content-type": "application/json",
              "anthropic-version": "2023-06-01"
          }
          
          prompt = f"""新しい{project_type}プロジェクトを作成してください。
          
          プロジェクト情報:
          - タイプ: {project_type}
          - 技術スタック: {tech_stack}
          - 要件: {requirements}
          
          以下を実装してください:
          1. 適切なプロジェクト構造
          2. 基本的な設定ファイル
          3. エントリーポイントとサンプルコード
          4. README.mdファイル
          5. 要件に応じた基本機能
          
          ファイルを作成してコミットしてください。"""
          
          data = {
              "model": "claude-3-sonnet-20240229",
              "max_tokens": 4000,
              "messages": [
                  {"role": "user", "content": prompt}
              ]
          }
          
          try:
              response = requests.post(
                  "https://api.anthropic.com/v1/messages",
                  headers=headers,
                  json=data,
                  timeout=30
              )
              
              if response.status_code == 200:
                  result = response.json()
                  content = result["content"][0]["text"]
                  print("Claude response received successfully")
                  
                  with open("generation_summary.txt", "w", encoding="utf-8") as f:
                      f.write("Project generated successfully by Claude AI")
                      
                  # 基本的なプロジェクトファイルを作成
                  with open("README.md", "w", encoding="utf-8") as f:
                      f.write(f"# {project_type.title()} Project\n\n")
                      f.write(f"Technology Stack: {tech_stack}\n\n")
                      f.write(f"Requirements: {requirements}\n\n")
                      f.write("Generated by Claude AI\n")
                      
              else:
                  print(f"API Error: {response.status_code}")
                  with open("generation_summary.txt", "w") as f:
                      f.write(f"API Error: {response.status_code}")
                      
          except Exception as e:
              print(f"Error: {e}")
              with open("generation_summary.txt", "w") as f:
                  f.write(f"Error: {e}")
          EOF
          
          python generate_project.py

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "feat: initialize project"
            git push origin main
          fi

      - name: Notify Slack
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            MESSAGE="Project generation completed successfully"
            COLOR="good"
          else
            MESSAGE="Project generation failed"
            COLOR="danger"
          fi
          
          REPO_URL="https://github.com/${{ github.repository }}"
          
          curl -X POST "$SLACK_WEBHOOK_URL" \
            -H 'Content-type: application/json' \
            -d "{
              \"text\": \"$MESSAGE\",
              \"attachments\": [{
                \"color\": \"$COLOR\",
                \"fields\": [
                  {\"title\": \"Project\", \"value\": \"${{ github.repository }}\", \"short\": true},
                  {\"title\": \"Type\", \"value\": \"${{ github.event.inputs.project_type }}\", \"short\": true}
                ],
                \"actions\": [
                  {\"type\": \"button\", \"text\": \"View Repository\", \"url\": \"$REPO_URL\"}
                ]
              }]
            }" || echo "Slack notification failed"
